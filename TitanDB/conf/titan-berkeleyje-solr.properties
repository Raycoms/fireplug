# Titan configuration sample: BerkeleyDB JE & Solr over sockets
#
# This file opens a BDB JE instance in the directory
# /path/to/this/file/../db/berkeley and the Solr HTTP API, respectively.
# Solr services must already be running before starting Titan with this file.

# The primary persistence provider used by Titan.  This is required.  It
# should be set one of Titan's built-in shorthand names for its standard
# storage backends (shorthands: berkeleyje, cassandrathrift, cassandra,
# astyanax, embeddedcassandra, hbase, inmemory) or to the full package and
# classname of a custom/third-party StoreManager implementation.
#
# Default:    (no default value)
# Data Type:  String
# Mutability: LOCAL
storage.backend=berkeleyje

# Storage directory for those storage backends that require local storage
#
# Default:    (no default value)
# Data Type:  String
# Mutability: LOCAL
storage.directory=../db/berkeley

# Configure a Solr backend named "search" at localhost:8983
# and path prefix /solr/titan.
# The collection must already exist -- see the manual for info.

# The indexing backend used to extend and optimize Titan's query
# functionality. This setting is optional.  Titan can use multiple
# heterogeneous index backends.  Hence, this option can appear more than
# once, so long as the user-defined name between "index" and "backend" is
# unique among appearances.Similar to the storage backend, this should be
# set to one of Titan's built-in shorthand names for its standard index
# backends (shorthands: lucene, elasticsearch, es, solr) or to the full
# package and classname of a custom/third-party IndexProvider
# implementation.
#
# Default:    elasticsearch
# Data Type:  String
# Mutability: GLOBAL_OFFLINE
#
# Settings with mutability GLOBAL_OFFLINE are centrally managed in Titan's
# storage backend.  After starting the database for the first time, this
# file's copy of this setting is ignored.  Use Titan's Management System
# to read or modify this value after bootstrapping.
index.search.backend=solr

# The operation mode for Solr which is either via HTTP (`http`) or using
# SolrCloud (`cloud`)
#
# Default:    cloud
# Data Type:  String
# Mutability: GLOBAL_OFFLINE
#
# Settings with mutability GLOBAL_OFFLINE are centrally managed in Titan's
# storage backend.  After starting the database for the first time, this
# file's copy of this setting is ignored.  Use Titan's Management System
# to read or modify this value after bootstrapping.
index.search.solr.mode=http

# List of URLs to use to connect to Solr Servers (LBHttpSolrClient is
# used), don't add core or collection name to the URL.
#
# Default:    http://localhost:8983/solr
# Data Type:  class java.lang.String[]
# Mutability: MASKABLE
index.search.solr.http-urls=http://localhost:8983/solr
